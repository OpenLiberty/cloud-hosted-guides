name: Mirror to GitLab Repos
 
# Triggers the workflow on push events but only for the prod branch.
on:
  push:
    branches: [ prod ]

jobs:
  deploy:
    name: Start Mirror Containers
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix: # Uses an array of Json variables to pass the repo names.
              # The names differ between Github and Gitlab so this is necessary.
              # Add new cloud-hosted-guides here to add them to the mirror process.
              # i.e. {"github":"new-lab-github-url","gitlab":"new-lab-gitlab-url"}
        repo:
          - {"github":"cloud-hosted-guide-cdi-intro","gitlab":"IBM-GPXX0G3KEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-containerize","gitlab":"IBM-GPXX01AVEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-docker","gitlab":"IBM-GPXX0FTCEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-getting-started","gitlab":"IBM-GPXX04TNEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-kubernetes-intro","gitlab":"IBM-GPXX0HZ2EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-kubernetes-microprofile-config","gitlab":"IBM-GPXX07YGEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-kubernetes-microprofile-health","gitlab":"IBM-GPXX0QU9EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-config","gitlab":"IBM-GPXX08WYEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-fallback","gitlab":"IBM-GPXX0E3QEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-health","gitlab":"IBM-GPXX0QTEEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-jwt","gitlab":"IBM-GPXX0W7KEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-metrics","gitlab":"IBM-GPXX0QS6EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-openapi","gitlab":"IBM-GPXX0YBFEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-opentracing-jaeger","gitlab":"IBM-GPXX0JLHEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-opentracing","gitlab":"IBM-GPXX0QR3EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-reactive-messaging-acknowledgment","gitlab":"IBM-GPXX05P1EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-reactive-messaging-rest-integration","gitlab":"IBM-GPXX0UMSEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-rest-client-async","gitlab":"IBM-GPXX0IHMEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-rest-client","gitlab":"IBM-GPXX0XV3EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microshed-testing","gitlab":"IBM-GPXX0YXHEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-reactive-messaging-openshift","gitlab":"IBM-GPXX0VSVEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-reactive-messaging","gitlab":"IBM-GPXX0I4FEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-reactive-rest-client","gitlab":"IBM-GPXX0ZG0EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-reactive-service-testing","gitlab":"IBM-GPXX07UGEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-rest-client-java","gitlab":"IBM-GPXX0M7ZEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-rest-intro","gitlab":"IBM-GPXX0JGFEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-contract-testing","gitlab":"IBM-GPXX05LMEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-reactive-messaging-sse","gitlab":"IBM-GPXX0WRDEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-liberty-deep-dive","gitlab":"IBM-GPXX0FG5EN","gitlab_branch":"main"}
          - {"github":"cloud-hosted-guide-liberty-deep-dive-v1","gitlab":"IBM-GPXX03A2EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-rest-openshift","gitlab":"IBM-GPXX0IMLEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-spring-boot","gitlab":"IBM-GPXX0Z2PEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-arquillian-managed","gitlab":"IBM-GPXX0SDXEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-bean-validation","gitlab":"IBM-GPXX0A1YEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-cors","gitlab":"IBM-GPXX0QJFEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-jpa-intro","gitlab":"IBM-GPXX0G31EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-maven-intro","gitlab":"IBM-GPXX0FFCEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-rest-client-angular","gitlab":"IBM-GPXX0ADEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-rest-hateoas","gitlab":"IBM-GPXX0MP0EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-rest-client-reactjs","gitlab":"IBM-GPXX0G81EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-rest-client-angularjs","gitlab":"IBM-GPXX0RL8EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-microprofile-graphql","gitlab":"IBM-GPXX0BSAEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-openliberty-operator-intro","gitlab":"IBM-GPXX0HAAEN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-openliberty-operator-openshift","gitlab":"IBM-GPXX0M5NEN","gitlab_branch":"main"}
          - {"github":"cloud-hosted-guide-maven-multimodules","gitlab":"IBM-GPXX0J71EN","gitlab_branch":"master"}
          - {"github":"cloud-hosted-guide-security-intro","gitlab":"IBM-GPXX06JEN","gitlab_branch":"main"}
          - {"github":"cloud-hosted-guide-mongodb-intro","gitlab":"IBM-GPXX017WEN","gitlab_branch":"main"}
          - {"github":"cloud-hosted-guide-graphql-client","gitlab":"IBM-GPXX04S5EN","gitlab_branch":"main"}
          - {"github":"cloud-hosted-guide-grpc-intro","gitlab":"IBM-GPXX0BCEN","gitlab_branch":"main"}
          - {"github":"cloud-hosted-guide-jakarta-websocket","gitlab":"IBM-GPXX0SGBEN","gitlab_branch":"main"}
    
    steps:
    # Any prerequisite steps
    - uses: actions/checkout@master

    # Mirror to Gitlab repo
    - name: Mirror
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: git@ssh.author-gitlab.skills.network:quicklabs/${{matrix.repo.gitlab}}.git
        BRANCH: ${{matrix.repo.gitlab_branch}}
        FOLDER: instructions/${{matrix.repo.github}}
        MESSAGE: "{msg}" # Sets the commit message on gitlab to be the same as on github.
        SSH_PRIVATE_KEY: ${{secrets.DEPLOY_KEY_QUICK_LABS}}
        KNOWN_HOSTS_FILE: .github/workflows/known_hosts # Needed if target repo is not on github.com.
        SKIP_EMPTY_COMMITS: "true"
name: Mirror to GitLab Repos
 
# Triggers the workflow on push events but only for the prod branch.
on:
  pull_request:
    types:
      - closed
    paths:
      - 'instructions/**'

jobs:

  matrixProd:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrixProd }}
    steps:
      # Any prerequisite steps
    - uses: actions/checkout@master
    
    - id: set-matrix
      run: |
        TASKS=$(echo $(cat $GITHUB_WORKSPACE/.github/workflows/mirror.json))
        TASKS="${TASKS//'%'/'%25'}"
        TASKS="${TASKS//$'\n'/'%0A'}"
        TASKS="${TASKS//$'\r'/'%0D'}"
        echo "::set-output name=matrixProd::$TASKS"

  matrixStaging:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrixStaging }}
    steps:
      # Any prerequisite steps
    - uses: actions/checkout@master
    
    - id: set-matrix
      run: |
        TASKS=$(echo $(cat $GITHUB_WORKSPACE/.github/workflows/StagingMirror.json))
        TASKS="${TASKS//'%'/'%25'}"
        TASKS="${TASKS//$'\n'/'%0A'}"
        TASKS="${TASKS//$'\r'/'%0D'}"
        echo "::set-output name=matrixStaging::$TASKS"

  singleMergedToProd:
    name: Check if PR was a single Guide merged to Prod
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'prod' && contains( github.event.pull_request.title,'Change to cloud-hosted')
    runs-on: ubuntu-latest
    steps:
    - name: Upload guide name
      run: |
        echo The PR was merged
        echo ${{ github.event.pull_request.title }} | sed 's/.* Change to //' > guide_name.txt

    - uses: actions/upload-artifact@v2
      with:
        name: guide_name
        path: guide_name.txt

  deployProd:
    needs: [singleMergedToProd, matrixProd]
    name: Start Mirror Containers for single Guide for Prod
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ${{fromJson(needs.matrixProd.outputs.matrix)}}
    
    steps:

      - uses: actions/download-artifact@v2
        with:
          name: guide_name
      - run: |
          echo "GUIDENAME=$(cat guide_name.txt)" >> $GITHUB_ENV
  
    # Any prerequisite steps
      - uses: actions/checkout@master

      - name: Check Files
        run: |
          if [ "${{ env.GUIDENAME }}" = "${{matrix.repo.github}}" ]; then 
            echo "Mirroring "${{ env.GUIDENAME }}" to "${{matrix.repo.gitlab}}"";
            GITLAB="${{matrix.repo.gitlab}}" >> $GITHUB_ENV;
            GITLAB_BRANCH="${{matrix.repo.gitlab-branch}}" >> $GITHUB_ENV;
          else
            echo "Skipping "${{matrix.repo.github}}"";
            exit 1;
          fi

      # Mirror to Gitlab repo
      - name: Mirror to GitLab
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: git@ssh.author-gitlab.skills.network:quicklabs/${{ env.GITLAB }}.git
          BRANCH: "${{matrix.repo.gitlab-branch}}"
          FOLDER: instructions/${{ env.GUIDENAME }}
          MESSAGE: "{msg}" # Sets the commit message on gitlab to be the same as on github.
          SSH_PRIVATE_KEY: ${{secrets.DEPLOY_KEY_QUICK_LABS}}
          KNOWN_HOSTS_FILE: .github/workflows/known_hosts # Needed if target repo is not on github.com.
          SKIP_EMPTY_COMMITS: "true"

  deployAllToProd:
    needs: matrixProd
    name: Start Mirror Containers for all Guides for Prod
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'prod' && contains( github.event.pull_request.title,'Change to multiple Guides')
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix: # Uses an array of Json variables to pass the repo names.
              # The names differ between Github and Gitlab so this is necessary.
              # Add new cloud-hosted-guides here to add them to the mirror process.
              # i.e. {"github":"new-lab-github-url","gitlab":"new-lab-gitlab-url"}
        repo: ${{fromJson(needs.matrixProd.outputs.matrix)}}
  
    steps:

    # Any prerequisite steps
    - uses: actions/checkout@master

    # Mirror to Gitlab repo
    - name: Mirror
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: git@ssh.author-gitlab.skills.network:quicklabs/${{matrix.repo.gitlab}}.git
        BRANCH: ${{matrix.repo.gitlab-branch}}
        FOLDER: instructions/${{matrix.repo.github}}
        MESSAGE: "{msg}" # Sets the commit message on gitlab to be the same as on github.
        SSH_PRIVATE_KEY: ${{secrets.DEPLOY_KEY_QUICK_LABS}}
        KNOWN_HOSTS_FILE: .github/workflows/known_hosts # Needed if target repo is not on github.com.
        SKIP_EMPTY_COMMITS: "true"

  singleMergedToStaging:
      name: Check if PR was a single Guide merged to Staging
      if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'staging' && contains( github.event.pull_request.title,'Change to cloud-hosted')
      runs-on: ubuntu-latest
      steps:
      - name: Upload guide name
        run: |
          echo The PR was merged
          # echo the PR title and trim only the guide name for example "To Prod: Change to cloud-hosted-guide-jakarta-websocket" = "cloud-hosted-guide-jakarta-websocket"
          echo ${{ github.event.pull_request.title }} | sed 's/.* Change to //' > guide_name.txt

      - uses: actions/upload-artifact@v2
        with:
          name: guide_name
          path: guide_name.txt
          
  deployStaging:
    needs: [singleMergedToStaging, matrixStaging]
    name: Start Mirror Containers for single Guide for Staging
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ${{fromJson(needs.matrixStaging.outputs.matrix)}}
    
    steps:

      - uses: actions/download-artifact@v2
        with:
          name: guide_name
      - run: |
          echo "GUIDENAME=$(cat guide_name.txt)" >> $GITHUB_ENV
  
    # Any prerequisite steps
      - uses: actions/checkout@master
        with: 
          ref: staging

      - name: Check Files
        run: |
          if [ "${{ env.GUIDENAME }}" = "${{matrix.repo.github}}" ]; then 
            echo "Mirroring "${{ env.GUIDENAME }}" to "${{matrix.repo.gitlab}}"";
            GITLAB="${{matrix.repo.gitlab}}" >> $GITHUB_ENV;
            GITLAB_BRANCH="${{matrix.repo.gitlab-branch}}" >> $GITHUB_ENV;
          else
            echo "Skipping "${{matrix.repo.github}}"";
            exit 1;
          fi

      - name: Mirror to GitLab
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: git@ssh.author-gitlab.skills.network:quicklabs/${{ env.GITLAB }}.git
          BRANCH: "${{matrix.repo.gitlab-branch}}"
          FOLDER: instructions/${{ env.GUIDENAME }}
          MESSAGE: "{msg}" # Sets the commit message on gitlab to be the same as on github.
          SSH_PRIVATE_KEY: ${{secrets.DEPLOY_KEY_QUICK_LABS}}
          KNOWN_HOSTS_FILE: .github/workflows/known_hosts # Needed if target repo is not on github.com.
          SKIP_EMPTY_COMMITS: "true"

  deployAllToStaging:
    needs: matrixStaging
    name: Start Mirror Containers for all Guides for Staging
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'staging' && contains( github.event.pull_request.title,'Change to multiple Guides')
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        repo: ${{fromJson(needs.matrixStaging.outputs.matrix)}}
        
    steps:
    # Any prerequisite steps
    - uses: actions/checkout@master
      with: 
        ref: staging
    
    # Mirror to Gitlab repo
    - name: Mirror
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: git@ssh.author-gitlab.skills.network:quicklabs/${{matrix.repo.gitlab}}.git
        BRANCH: ${{matrix.repo.gitlab-branch}}
        FOLDER: instructions/${{matrix.repo.github}}
        MESSAGE: "{msg}" # Sets the commit message on gitlab to be the same as on github.
        SSH_PRIVATE_KEY: ${{secrets.DEPLOY_KEY_QUICK_LABS}}
        KNOWN_HOSTS_FILE: .github/workflows/known_hosts # Needed if target repo is not on github.com.
        SKIP_EMPTY_COMMITS: "true"
    
    # Output link to staged files
    - name: Print staging lab URL
      run: echo "Staging quicklab available at https://labs.cognitiveclass.ai/tools/theiadocker/lab/tree?md_instructions_url=https://cf-course-data-staging.s3.us-east.cloud-object-storage.appdomain.cloud/${{matrix.repo.gitlab}}/instructions.md"
      shell: bash