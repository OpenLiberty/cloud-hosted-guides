name: Mirror a guide to AWB

on:
  workflow_dispatch:
    inputs:
      guide_name:
        description: 'Guide name, e.g. cdi-intro'
        required: true
      to:
        description: 'main or staging'
        required: true

jobs:
  printInputs:
    runs-on: ubuntu-latest
    steps: 
      - name: Output message
        run: |
          echo "Guide name: ${{ github.event.inputs.guide_name }}"
          echo "To: ${{ github.event.inputs.to }}"

  matrixProd:
    runs-on: ubuntu-latest
    if: github.event.inputs.to == 'main'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrixProd }}
    steps:
    - uses: actions/checkout@master
    - id: set-matrix
      run: |
        TASKS=$(echo $(cat $GITHUB_WORKSPACE/.github/workflows/mirror.json))
        TASKS="${TASKS//'%'/'%25'}"
        TASKS="${TASKS//$'\n'/'%0A'}"
        TASKS="${TASKS//$'\r'/'%0D'}"
        echo "::set-output name=matrixProd::$TASKS"

  matrixStaging:
    runs-on: ubuntu-latest
    if: github.event.inputs.to == 'staging'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrixStaging }}
    steps:
    - uses: actions/checkout@master
    - id: set-matrix
      run: |
        TASKS=$(echo $(cat $GITHUB_WORKSPACE/.github/workflows/StagingMirror.json))
        TASKS="${TASKS//'%'/'%25'}"
        TASKS="${TASKS//$'\n'/'%0A'}"
        TASKS="${TASKS//$'\r'/'%0D'}"
        echo "::set-output name=matrixStaging::$TASKS"

  deployProd:
    needs: [matrixProd]
    continue-on-error: true
    runs-on: ubuntu-latest
    if: github.event.inputs.to == 'main'
    strategy:
      matrix:
        repo: ${{fromJson(needs.matrixProd.outputs.matrix)}}
    steps:
      - uses: actions/checkout@master
      - name: Check If Guide Exists
        run: |
          if [ "${{ github.event.inputs.guide_name }}" = "${{matrix.repo.guide}}" ]; then 
            echo "Mirroring "${{ github.event.inputs.guide_name }}" to AuthorWorkbench";
            echo "awb url: https://author-workbench.skills.network/quicklabs/${{matrix.repo.quicklab_id}}/labs/${{matrix.repo.lab_id}}";
          else
            echo "Skipping "${{matrix.repo.github}}"";
            exit 1;
          fi

      - name: Check for insturctions.md
        run: |
          FILE_PATH="instructions/${{ matrix.repo.github }}/instructions.md"
          if [[ -f "$FILE_PATH" ]]; then
            echo "'$FILE_PATH' exists."
          else
            echo "'$FILE_PATH' does not exist."
            exit 1
          fi
      - name: Mirror to AWB
        env:
          LAB_ID: ${{ matrix.repo.lab_id }}
          OAUTH_TOKEN: ${{ secrets.AWB_OAUTH_TOKEN }}
          CHANGE_LOG: "{{msg}}"
          PUBLISH: true
          FILE_PATH: instructions/${{ matrix.repo.github }}/instructions.md
        run: |
          response=$(curl -X POST "https://author.skills.network/api/v1/labs/${LAB_ID}/lab_versions/latest/drafts" \
            -H "Authorization: Bearer ${OAUTH_TOKEN}" \
            -F "file=@${FILE_PATH}" \
            -F "draft[changelog]=${CHANGE_LOG}" \
            -F "publish=${PUBLISH}" \
            -w "%{http_code}" -o result.txt)
  
          cat result.txt
          echo "Response Code: $response"
  
          if [[ "$response" -ne 200 && "$response" -ne 201 ]];
            echo "Request failed with status $response"
            exit 1  # Exit the script with error if not successful
          else
            echo "Request succeeded with status $response"
          fi

  deployStaging:
    needs: [matrixStaging]
    # name: Start Mirror Containers for single Guide for Staging
    continue-on-error: true
    runs-on: ubuntu-latest
    if: github.event.inputs.to == 'staging'
    strategy:
      matrix:
        repo: ${{fromJson(needs.matrixStaging.outputs.matrix)}}
    steps:
      - uses: actions/checkout@master
        with: 
          ref: staging
      - name: Check If Guide Exists
        run: |
          if [ "${{ github.event.inputs.guide_name }}" = "${{matrix.repo.guide}}" ]; then 
            echo "Mirroring "${{ github.event.inputs.guide_name }}" to AuthorWorkbench";
            echo "awb url: https://author-workbench.skills.network/quicklabs/${{matrix.repo.quicklab_id}}/labs/${{matrix.repo.lab_id}}";
          else
            echo "Skipping "${{matrix.repo.github}}"";
            exit 1;
          fi
      - name: Check for insturctions.md
        run: |
          FILE_PATH="instructions/${{ matrix.repo.github }}/instructions.md"
          if [[ -f "$FILE_PATH" ]]; then
            echo "'$FILE_PATH' exists."
          else
            echo "'$FILE_PATH' does not exist."
            exit 1
          fi
      - name: Mirror to AWB
        env:
          LAB_ID: ${{ matrix.repo.lab_id }}
          OAUTH_TOKEN: ${{ secrets.AWB_OAUTH_TOKEN }}
          CHANGE_LOG: "{{msg}}"
          PUBLISH: false
          FILE_PATH: instructions/${{ matrix.repo.github }}/instructions.md
        run: |
          response=$(curl -X POST "https://author.skills.network/api/v1/labs/${LAB_ID}/lab_versions/latest/drafts" \
            -H "Authorization: Bearer ${OAUTH_TOKEN}" \
            -F "file=@${FILE_PATH}" \
            -F "draft[changelog]=${CHANGE_LOG}" \
            -F "publish=${PUBLISH}" \
            -w "%{http_code}" -o result.txt)
  
          cat result.txt
          echo "Response Code: $response"
  
          if [[ "$response" -ne 200 && "$response" -ne 201 ]];
            echo "Request failed with status $response"
            exit 1  # Exit the script with error if not successful
          else
            echo "Request succeeded with status $response"
          fi
